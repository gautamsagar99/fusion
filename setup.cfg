[flake8]
max-line-length = 140
max-complexity = 18
ignore = E203, E266, W503, D414, D411, D202, D205 
docstring-convention = google
per-file-ignores = 
    __init__.py:F401
    tests/*:D103,D100
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    # By default test codes will be linted.
    # tests

[mypy]
ignore_missing_imports = True

[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

#    
[tox:tox]
isolated_build = true
envlist = py39
    format, lint, doc, build


[gh-actions]
python =
    3.8: py38
    3.9: py39, format, lint, doc, build
    3.7: py37
    3.10: py310

[testenv]
allowlist_externals = pytest
deps = poetry
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    poetry install -v   
    poetry run pytest --cov=fusion --cov-branch --cov-report=xml --cov-report=term-missing tests

[testenv:format]
allowlist_externals =
    poetry
    isort
    black
commands_pre = poetry install -v
commands =
    poetry run isort fusion
    poetry run black fusion tests

[testenv:lint]
allowlist_externals =
    poetry
    flake8
    mypy
commands_pre = poetry install -v
commands =
    poetry run flake8 fusion tests
    poetry run mypy fusion tests

[testenv:doc]
allowlist_externals =
    poetry
commands_pre = poetry install -v
commands =
    poetry run mike deploy vtest -m "test doc build" --ignore
    poetry run mike delete vtest -m "remove doc build" --ignore

[testenv:build]
allowlist_externals =
    poetry
    twine
commands_pre = poetry install -v
commands =
    poetry build
    poetry run twine check dist/*
